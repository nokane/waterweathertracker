files:
  "/home/ec2-user/setup.sh" :
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      #
      # Script to setup a Elastic Beanstalk AMI with geospatial libraries and postGIS
      #
      # sh aws_ami_prep.sh > aws_ami_prep.log 2>&1 &
      echo Defaults:root \!requiretty >> /etc/sudoers 
      # Go to ec2-user home directory
      cd /home/ec2-user

      # yum libraries
      sudo yum -y install gcc gcc-c++ make cmake libtool libcurl-devel libxml2-devel rubygems swig fcgi-devel\
                          libtiff-devel freetype-devel curl-devel libpng-devel giflib-devel libjpeg-devel\
                          cairo-devel freetype-devel readline-devel openssl-devel python27 python27-devel

      # Postgres
      wget  http://ftp.postgresql.org/pub/source/v9.3.3/postgresql-9.3.3.tar.gz
      tar -zxvf postgresql-9.3.3.tar.gz
      cd postgresql-9.3.3
      ./configure  --with-openssl --bindir=/usr/bin
      make
      sudo make install
      cd ..

      # GEOS
      wget http://download.osgeo.org/geos/geos-3.4.2.tar.bz2
      tar -xvf geos-3.4.2.tar.bz2
      cd geos-3.4.2
      ./configure
      make
      sudo make install
      cd ..

      # PostGIS
      export LD_LIBRARY_PATH=/usr/local/pgsql/lib/:LD_LIBRARY_PATH
      wget http://download.osgeo.org/postgis/source/postgis-2.1.0.tar.gz
      tar -xvf postgis-2.1.0.tar.gz
      cd postgis-2.1.0
      ./configure
      make
      sudo make install
      cd ..

      sudo yum -y --enablerepo=epel install nodejs npm

      sudo npm install -g bower

  "/tmp/cronjob" :
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    content: |
      *\30 * * * * source /opt/python/current/env && python /opt/python/current/app/manage.py runcrons

container_commands:
  00_b_script:
    command: "sh /home/ec2-user/setup.sh"
    leader_only: true
  01_bowerinstall:
    command: "python manage.py bower_install -- --allow-root"
    leader_only: true
  02_collectstatic:
    command: "python manage.py collectstatic --noinput"
    leader_only: true
  03_djangocron:
    command: "python manage.py migrate django_cron"
    leader_only: true
  04_makemigrations:
    command: "python manage.py migrate --fake"
    leader_only: true
  05_delete_cron_jobs:
    command: "crontab -r || exit 0"
    leader_only: true
  06_add_cron_jobs:
    command: "crontab /tmp/cronjob"
    leader_only: true
option_settings:
  "aws:elasticbeanstalk:application:environment":
    DJANGO_SETTINGS_MODULE: "wwtracker_app.settings.settings"
    PYTHONPATH: "/opt/python/current/app/wwtracker_app:$PYTHONPATH"
  "aws:elasticbeanstalk:container:python":
    WSGIPath: "wwtracker_app/wsgi.py"
packages:
  yum:
    postgresql92-devel: []
    git: []
    geos: []